@import "../../styles/variables";
@mixin theme-light {
  color: black;
  background-color: white;
  h1{
    color: $primary-color;
    text-align: center;
  }
  .info-card {
    background-color: $secondary-color;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  .info-container {
    background-color: white;
  }
}

@mixin theme-dark {
  background-color: $dark-bg-color;
  color: white;

  h1{
    color: $dark-primary-color;
    text-align: center;
  }
  .info-card {
    background-color: darken($secondary-color, 20%);
    box-shadow: 0 4px 8px rgba(255, 255, 255, 0.2);
  }

  .info-container {
    background-color: $button-bg;
  }
}

// Aplicamos los mixins a las clases correspondientes
.light-theme {
  @include theme-light;
}

.dark-theme {
  @include theme-dark;
}
$colors: $primary-color, $secondary-color, $dark-primary-color, $button-bg;
$grid-areas: a, b, c, d;


.info-grid {
  margin-left: 2vw;
  margin-right: 2vw;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, auto);
  grid-template-areas:
    "a b"
    "c d";

  @for $i from 1 through 4 {
    .info-card#{$i} {
      grid-area: nth($grid-areas, $i);
      background-color: nth($colors, $i);
      text-align: center;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      transition: transform 0.3s ease-in-out;

      &:hover {
        transform: scale(1.05);
        cursor: help;
      }
    }
  }
}

// Estilos para las imágenes de la sección de información
.info-grid-img {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: repeat(3, auto);
  grid-template-areas:
    "a a"
    "b c"
    "d d";
  gap: 15px;
  justify-content: center;
  align-items: center;
  padding: 20px;

  div {
    text-align: center;

    img {
      width: 100%;
      height: auto;
      max-width: 300px;
      border-radius: 10px;
      transition: transform 0.3s ease-in-out, filter 0.3s ease-in-out;
    }
  }

  // Aplicamos filtros según el atributo data-index
  [index="1"] img { filter: brightness(1.2) contrast(1.1); }
  [index="2"] img { filter: grayscale(0.8) blur(2px); }
  [index="3"] img { filter: sepia(0.6) hue-rotate(30deg); }
  [index="4"] img { filter: invert(0.7) saturate(1.5); }

  // Hover dinámico: pares reducen tamaño, impares aumentan
  [index="1"]:hover img, [index="3"]:hover img { transform: scale(1.05); filter: none; }
  [index="2"]:hover img, [index="4"]:hover img { transform: scale(0.95); filter: none; }
}

// Animación del Digimon caminando
.digiWalk {
  position: relative;
  width: 100%;
  height: 150px;
  overflow: hidden;
  display: flex;
  align-items: center;

  img {
    width: 100px;
    height: auto;
    animation: walkCycle 0.5s steps(2) infinite, moveSideways 5s linear infinite;
  }
}

// Alterna entre digimonWalk1 y digimonWalk2 para simular la caminata
@keyframes walkCycle {
  0%, 100% { content: url("/assets/digimonWalk1.png"); }
  50% { content: url("/assets/digimonWalk2.png"); }
}

// Movimiento de izquierda a derecha y luego derecha a izquierda
@keyframes moveSideways {
  0% { transform: translateX(-10%) scaleX(-1); } // Empieza a la izquierda, mirando a la derecha
  49.9% { transform: translateX(93vw) scaleX(-1); } // Llega a la derecha, mantiene orientación
  50% { transform: translateX(93vw) scaleX(1); } // Gira hacia la izquierda
  99.9% { transform: translateX(-10%) scaleX(1); } // Llega a la izquierda, mantiene orientación invertida
  100% { transform: translateX(-10%) scaleX(-1); } // Resetea a posición inicial correctamente
}

// Contenedor principal del Info
.info-container {
  margin-top: 0px;
  padding: 0px;
}
.info-header{
  margin-bottom: 10px;
  &::after {
    content: "";
    display: block;
    width: 60%;
    height: 4px;
    background-color: $primary-color;
    margin: 8px auto 0;
    transition: width 0.3s ease-in-out;
  }

  &:hover::after {
    width: 100%;
  }
}

p:not(:first-child) {
  font-weight: bold;
}
p:is(:last-child){
  text-decoration: underline;
}
h1{
  margin-top: 0px !important;
  padding-top: 20px;
}
